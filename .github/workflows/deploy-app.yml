name: deploy-app

on:
  workflow_dispatch:

env:
  BACKEND_IMAGE_NAME: dwd_backend
  FRONTEND_IMAGE_NAME: dwd_frontend

jobs:
  backend_push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build . --file backend.Dockerfile --tag $BACKEND_IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
        working-directory: api/
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$BACKEND_IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $BACKEND_IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  frontend_push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build . --file frontend.Dockerfile --tag $FRONTEND_IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
        working-directory: web/
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$FRONTEND_IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $FRONTEND_IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  backend_deploy:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: backend_push
    steps:
      - name: SSH & Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_AWS_BACKEND_SERVER_IP }}
          username: ${{ secrets.SSH_SERVER_USER }}
          key: ${{ secrets.SSH_BACKEND_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_BACKEND_PASSPHRASE }}
          script_stop: true
          script: |
            echo ghcr.io/deerwomandezigns/dwd_backend:${${{github.ref}}##*/}
            docker pull ghcr.io/deerwomandezigns/dwd_backend:${${{github.ref}}##*/}
            image=$(docker images -q)
            docker run -dp 10000:80 -e AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }} -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -e AWS_DEFAULT_REGION='us-east-2' --name dwd_backend $image

  frontend_deploy:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: frontend_push
    steps:
      - name: SSH & Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_AWS_FRONTEND_SERVER_IP }}
          username: ${{ secrets.SSH_SERVER_USER }}
          key: ${{ secrets.SSH_FRONTEND_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_FRONTEND_PASSPHRASE }}
          script_stop: true
          script: |
            echo ghcr.io/deerwomandezigns/dwd_frontend:${${{github.ref}}##*/}
            docker pull ghcr.io/deerwomandezigns/dwd_frontend:${${{github.ref}}##*/}
            image=$(docker images -q)
            docker run -dp 80:80 --name dwd_frontend $image
